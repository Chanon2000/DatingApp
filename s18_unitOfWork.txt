[Introduction]
    1. The Unit of Work pattern => ใช้ uow ทำให้เราสร้าง datacontext instance แค่อันเดียวในการใช้งาน
    2. Optimising queries to the DB
    3. Adding a confirm dialog service
    4. Finishing touches

[Unit of Work]
    - Maintaining a list of objects affected by a business transaction and coordinates the writing of changes.
    - เราต้องการ SaveChanges หลังจากที่ Entity framework track โดยไม่สนว่ามันจะเป็น repository อันไหน ครั้งเดียวต่อ 1 request เลย
    - เพื่อที่เราจะได้ saveChanges แค่ 1 ครั้งใน 1 transaction นั้นก็คือทำให้ 1 request ก็จะไปเขียนลง database แค่ 1 ครั้งเท่านั้น (1 request คือ 1 transaction)

ปัญหาที่เราต้องการแก้
    - แต่ละ repo ก็จะมีหลาย method เพื่อ get data ของตัวเอง
    - ต้อง save changes ของใครของมัน
    - และต้อง inject แต่ละ repo คนละ instance ลง controllers

สิ่งที่เราจะทำการคือเราจะ inject แต่ unit of work แทนที่จะเป็น repo ต่างๆ ลง controllers แล้วเราก็จะเข้าถึงมันผ่าน uow

[เจอ defact]
ที่เวลา lisa ส่งข้อความแล้วมันขึ้นว่า todd อ่านแล้วเลยทั้งๆที่ todd ไม่ได้อยู่ในแชตเป็นเพราะว่า ที่ Group มันเก็บ Connections ของ todd อยู่ ไม่พอเก็บซำ้ด้วย

[Optimizing queries part one]
เมื่อคุณลองยิง api บางเส้น และเมื่อเข้าไปดูที่ terminal จะเห็น sql ซึ่งนั้นจะทำให้คุณเห็นว่ามันยัง query ในสิ่งที่ไม่จำเป็นต้อง query นี้คือสิ่งที่เราจะมาแก้ใน commit นี้

[Fixing UTC dates again]
dateRead ไม่ถูก เปลี่ยนเป็น utc หลังจาก Optimizing ก่อนหน้านี้ไป

วีธีแก้ปัญหานี้
# https://github.com/dotnet/efcore/issues/4711

date ทุก field เก็บแบบ unspecified นั้นก็คือไม่ใช่ utc

[Adding a confirmation service to the angular app]
"ng g s confirm --skip-tests"

"ng g c confirm-dialog --skip-tests"